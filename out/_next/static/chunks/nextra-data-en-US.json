{"/about":{"title":"About me","data":{"":"Hi, I'm Diky Wahyudi\n👋 Hi, I’m Diky Wahyudi (@toosakarin1412)\n👀 I’m interested in Data Science and Artificial Intelligence\n🌱 I’m currently learning at Syiah Kuala University\n📫 How to reach me : Discord rin_1214\n🌐 Know more about me at dikywa.my.id"}},"/docker/container":{"title":"Container Docker","data":{"":"Pada halaman ini, akan membahas mengenai perintah - perintah lanjutan mengenai Container pada Docker seperti membuat, menjalankan, memberhentikan dan menghapus container pada docker. Selain itu akan membahas beberapa pengaturan lanjutan seperti membuka PORT pada container.","membuat-container#Membuat Container":"Untuk membuat container pada docker, kita bisa menggunakan perintah docker run. Berikut adalah contoh perintah untuk membuat container pada docker:\n> docker run [OPTIONS] IMAGE [COMMAND] [ARG...]\nReferensi: https://docs.docker.com/engine/reference/commandline/run/Berikut adalah contoh langkah-langkah untuk membuat container pada docker:\n> docker run -it --name my-ubuntu ubuntu:latest\nSetelah itu akan muncul prompt baru yang menunjukkan bahwa kita sudah masuk ke dalam container dengan nama my-ubuntu.\nroot@<container_id>:/#","melihat-daftar-container#Melihat Daftar Container":"Untuk melihat daftar container yang sedang berjalan pada docker, kita bisa menggunakan perintah docker ps.\nBerikut adalah contoh perintah untuk melihat daftar container yang sedang berjalan pada docker:\n> docker ps [OPTIONS]\nReferensi: https://docs.docker.com/engine/reference/commandline/ps/Berikut adalah contoh langkah-langkah untuk melihat daftar container yang sedang berjalan pada docker:\n> docker ps\nCONTAINER ID   IMAGE     COMMAND       CREATED         STATUS         PORTS     NAMES\nfba6dd330e8f   ubuntu    \"/bin/bash\"   2 minutes ago   Up 2 minutes             my-ubuntu\n89f8b2cb2e2d   fedora    \"/bin/bash\"   5 minutes ago   Up 5 minutes             server-fedora","menjalankan-container-yang-berhenti#Menjalankan Container yang Berhenti":"Untuk menjalankan container yang berhenti, kita bisa menggunakan perintah docker start.\nBerikut adalah contoh perintah untuk menjalankan container yang berhenti:\nCara melihat container yang berhenti adalah dengan menggunakan perintah docker ps -a.\nJika container berhenti, maka statusnya akan menjadi Exited.\n> docker start [OPTIONS] CONTAINER\nReferensi: https://docs.docker.com/engine/reference/commandline/start/Berikut adalah contoh langkah-langkah untuk menjalankan container yang berhenti:\n> docker start my-ubuntu\nSetelah itu, container my-ubuntu akan berjalan kembali dapat dilihat dengan perintah docker ps.\n> docker ps\nCONTAINER ID   IMAGE     COMMAND       CREATED         STATUS                       PORTS       NAMES\nfba6dd330e8f   ubuntu    \"/bin/bash\"   2 minutes ago   Up 2 minutes                             my-ubuntu\n89f8b2cb2e2d   fedora    \"/bin/bash\"   5 minutes ago   Exited (2) 31 hours ago                  server-fedora","memberhentikan-container#Memberhentikan Container":"Untuk memberhentikan container yang sedang berjalan, kita bisa menggunakan perintah docker stop.\nBerikut adalah contoh perintah untuk memberhentikan container yang sedang berjalan:\n> docker stop [OPTIONS] CONTAINER\nReferensi: https://docs.docker.com/engine/reference/commandline/stop/Berikut adalah contoh langkah-langkah untuk memberhentikan container yang sedang berjalan:\n> docker stop my-ubuntu\nCONTAINER ID   IMAGE     COMMAND       CREATED         STATUS                       PORTS       NAMES\nfba6dd330e8f   ubuntu    \"/bin/bash\"   2 minutes ago   Exited (2) 2 Seconds ago                 my-ubuntu\n89f8b2cb2e2d   fedora    \"/bin/bash\"   5 minutes ago   Exited (2) 31 hours ago                  server-fedora","menghapus-container#Menghapus Container":"Untuk menghapus container yang berhenti, kita bisa menggunakan perintah docker rm.\nBerikut adalah contoh perintah untuk menghapus container yang berhenti:\n> docker rm [OPTIONS] CONTAINER\nJika container sedang berjalan, maka kita harus memberhentikan container tersebut terlebih dahulu sebelum menghapusnya.\nReferensi: https://docs.docker.com/engine/reference/commandline/rm/Berikut adalah contoh langkah-langkah untuk menghapus container yang berhenti:\n> docker rm my-ubuntu\nCONTAINER ID   IMAGE     COMMAND       CREATED         STATUS                       PORTS       NAMES\n89f8b2cb2e2d   fedora    \"/bin/bash\"   5 minutes ago   Exited (2) 31 hours ago                  server-fedora","membuka-port-pada-container#Membuka PORT pada Container":"PORT adalah sebuah mekanisme yang digunakan untuk menghubungkan container dengan local machine atau container lainnya.Untuk membuka PORT pada container, kita bisa menggunakan perintah docker run -p.\nBerikut adalah contoh perintah untuk membuka PORT pada container:\n> docker run -p [HOST_PORT]:[CONTAINER_PORT] IMAGE\nReferensi: https://docs.docker.com/engine/reference/commandline/run/Berikut adalah contoh langkah-langkah untuk membuka PORT pada container:\n> docker run -p 8080:80 nginx\nSetelah itu, PORT 80 pada container akan di-mapping ke PORT 8080 pada local machine."}},"/docker/dasar":{"title":"Dasar - Dasar Docker","data":{"":"Pada halaman ini, kita akan membahas dasar-dasar Docker, termasuk perbedaan antara image dan container, cara melakukan pull image dari Docker Hub, dan cara membuat dan menjalankan container Docker.","perbedaan-image-dan-container#Perbedaan Image dan Container":"Dalam Docker, terdapat dua konsep utama yang sering digunakan, yaitu image dan container. Kedua konsep ini memiliki perbedaan yang mendasar, yaitu:\nImage: Image adalah template yang berisi semua dependensi dan library yang diperlukan untuk menjalankan aplikasi. Image bersifat read-only, sehingga tidak dapat diubah setelah image dibuat. Image digunakan untuk membuat kontainer Docker.\nContainer: Kontainer adalah instance dari image yang berjalan di lingkungan terisolasi. Kontainer Docker bersifat read-write, sehingga pengguna dapat melakukan perubahan di dalam kontainer. Kontainer Docker dapat dijalankan, dihentikan, dihapus, dan dihentikan kembali.","pull-image-dari-docker-hub#Pull Image dari Docker Hub":"Docker Hub adalah cloud-based registry yang menyediakan berbagai image Docker yang dapat digunakan oleh pengguna. Pengguna dapat mencari image Docker yang dibutuhkan di Docker Hub dan melakukan pull image tersebut ke local machine.Pull image dari Docker Hub artinya mengunduh image Docker dari Docker Hub ke local machine.\ndocker pull [OPTIONS] NAME:[TAG]\nNAME adalah nama image yang berada pada Docker Hub\nTAG adalah versi dari image tersebut Note: Jika tidak ada tag, maka Docker akan mengunduh versi terbaru dari image tersebut (latest).\nReferensi: https://docs.docker.com/engine/reference/commandline/pull/Berikut adalah langkah-langkah untuk melakukan pull image dari Docker Hub:\nBuka terminal atau command prompt.\nJalankan perintah berikut untuk melakukan pull image ubuntu dari Docker Hub:\n> docker pull ubuntu:latest\natau jika ingin mengunduh versi tertentu dari image ubuntu, misalnya versi 20.10:\n> docker pull ubuntu:20.10\nTunggu hingga proses pull image selesai.\nSetelah proses selesai, image ubuntu akan tersedia di local machine.\nUntuk melihat daftar image yang telah diunduh, jalankan perintah berikut:\n> docker images\nREPOSITORY                       TAG       IMAGE ID       CREATED        SIZE\nfedora                           latest    eca85b75dc19   11 days ago    222MB\nalpine                           3.20.3    91ef0af61f39   2 weeks ago    7.8MB\nalpine                           latest    91ef0af61f39   2 weeks ago    7.8MB\nubuntu                           latest    edbfe74c41f8   8 weeks ago    78.1MB","membuat-dan-menjalankan-container-docker#Membuat dan Menjalankan Container Docker":"Setelah image berhasil diunduh, selanjutnya kita akan membuat dan menjalankan container Docker dari image yang telah diunduh.perintah untuk membuat dan menjalankan container Docker adalah sebagai berikut:\n> docker run [OPTIONS] IMAGE [COMMAND] [ARG...]\nReferensi: https://docs.docker.com/engine/reference/commandline/run/Berikut adalah langkah-langkah untuk membuat dan menjalankan container Docker:\nBuka terminal atau command prompt.\nJalankan perintah berikut untuk membuat container dari image ubuntu:\n> docker run -it --name my-ubuntu ubuntu:latest\nSetelah itu akan muncul prompt baru yang menunjukkan bahwa kita sudah masuk ke dalam container dengan nama my-ubuntu.\nroot@<container-id>:/#\nSelamat, Anda sudah berhasil membuat dan menjalankan container Docker!\nUntuk keluar dari container, Anda dapat menekan tombol Ctrl + D atau menjalankan perintah exit.\nPada saat ini kita sudah berhasil membuat dan menjalankan container Docker dari image ubuntu. Selanjutnya, kita dapat melakukan berbagai operasi di dalam container tersebut, seperti menginstall aplikasi, mengubah konfigurasi, dan lain sebagainya.Pelajari lebih lanjut tentang Linux di Linux.Pelajari lebih lanjut tentang Container Docker di Container Docker.Pelajari lebih lanjut tentang Images Docker di Images Docker."}},"/docker/images":{"title":"Images Docker","data":{"":"Pada halaman ini, kita akan membahas mengenai image Docker, termasuk cara melakukan pull image dari Docker Hub dan cara melihat daftar image yang telah diunduh. Selain itu akan dibahas mengenai cara membuat image Docker sendiri.","pull-image-dari-docker-hub#Pull Image dari Docker Hub":"Docker Hub adalah cloud-based registry yang menyediakan berbagai image Docker yang dapat digunakan oleh pengguna. Pengguna dapat mencari image Docker yang dibutuhkan di Docker Hub dan melakukan pull image tersebut ke local machine.Pull image dari Docker Hub artinya mengunduh image Docker dari Docker Hub ke local machine.\n> docker pull [OPTIONS] NAME:[TAG]\nNAME adalah nama image yang berada pada Docker Hub\nTAG adalah versi dari image tersebut Note: Jika tidak ada tag, maka Docker akan mengunduh versi terbaru dari image tersebut (latest).\nReferensi: https://docs.docker.com/engine/reference/commandline/pull/Berikut adalah langkah-langkah untuk melakukan pull image dari Docker Hub:\nJalankan perintah berikut untuk melakukan pull image ubuntu dari Docker Hub:\n> docker pull ubuntu:latest\natau jika ingin mengunduh versi tertentu dari image ubuntu, misalnya versi 20.10:\n> docker pull ubuntu:20.10\nTunggu hingga proses pull image selesai.\nSetelah proses selesai, anda akan melihat image melalui perintah docker images.\n> docker images\nREPOSITORY                       TAG       IMAGE ID       CREATED        SIZE\nfedora                           latest    eca85b75dc19   11 days ago    222MB\nalpine                           3.20.3    91ef0af61f39   2 weeks ago    7.8MB\nalpine                           latest    91ef0af61f39   2 weeks ago    7.8MB\nubuntu                           latest    edbfe74c41f8   8 weeks ago    78.1MB","menghapus-image-docker#Menghapus Image Docker":"Untuk menghapus image Docker yang tidak digunakan, kita bisa menggunakan perintah docker rmi.\nBerikut adalah contoh perintah untuk menghapus image Docker:\n> docker rmi [OPTIONS] IMAGE [IMAGE...]\nIMAGE adalah nama image yang ingin dihapus.\nReferensi: https://docs.docker.com/engine/reference/commandline/rmi/Berikut adalah langkah-langkah untuk menghapus image Docker:\nJalankan perintah berikut untuk menghapus image ubuntu:\n> docker rmi ubuntu\nTunggu hingga proses selesai.\nSetelah proses selesai, image ubuntu akan terhapus dari local machine.","membuat-image-docker-sendiri-menggunakan-dockerfile#Membuat Image Docker Sendiri Menggunakan Dockerfile":"Selain menggunakan image Docker yang telah tersedia di Docker Hub, kita juga bisa membuat image Docker sendiri.\nUntuk membuat image Docker sendiri, kita bisa menggunakan Dockerfile.Dockerfile adalah sebuah file teks yang berisi instruksi untuk membangun image Docker. Dockerfile berisi langkah-langkah yang diperlukan untuk membuat image Docker, seperti menentukan base image, menyalin file, mengeksekusi perintah, dan lain sebagainya.Berikut adalah contoh Dockerfile sederhana untuk membuat image yang berisi web server Nginx:\n# Menggunakan base image nginx\nFROM ubuntu:latest\n# Install Nginx\nRUN apt-get update && apt-get install -y nginx\n# BUka port 80\nEXPOSE 80\n# Perintah yang akan dijalankan ketika container dijalankan\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\nPerintah untuk membuat image Docker dari Dockerfile adalah sebagai berikut:\n> docker image build [OPTIONS] PATH\nPATH adalah lokasi Dockerfile yang akan digunakan untuk membangun image.\nReferensi: https://docs.docker.com/engine/reference/builder/Berikut adalah langkah-langkah untuk membuat image Docker sendiri:\nBuat Dockerfile dengan isi seperti contoh di atas.\nSimpan Dockerfile tersebut di dalam sebuah direktori.\nBuka terminal atau command prompt.\nPindah ke direktori tempat Dockerfile disimpan.\nJalankan perintah berikut untuk membangun image dari Dockerfile:\n> docker build -t my-nginx .\nTunggu hingga proses selesai.\nSetelah proses selesai, image my-nginx akan tersedia di local machine.\n> docker images\nREPOSITORY                       TAG       IMAGE ID       CREATED        SIZE\nmy-nginx                         latest    7a2b3b1b0cde   2 minutes ago  78.1MB\nfedora                           latest    eca85b75dc19   11 days ago    222MB\nalpine                           3.20.3    91ef0af61f39   2 weeks ago    7.8MB\nalpine                           latest    91ef0af61f39   2 weeks ago    7.8MB\nubuntu                           latest    edbfe74c41f8   8 weeks ago    78.1MB\nDengan demikian, kita telah berhasil membuat image Docker sendiri menggunakan Dockerfile.","membuat-image-docker-dari-container-yang-telah-dijalankan#Membuat Image Docker dari Container yang Telah Dijalankan":"Selain menggunakan Dockerfile, kita juga bisa membuat image Docker dari container yang telah dijalankan.\nUntuk membuat image Docker dari container yang telah dijalankan, kita bisa menggunakan perintah docker commit.Perintah untuk membuat image Docker dari container yang telah dijalankan adalah sebagai berikut:\n> docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]\nCONTAINER adalah ID atau nama container yang ingin diubah menjadi image.\nREPOSITORY adalah nama image baru yang akan dibuat.\nTAG adalah versi dari image tersebut. Jika tidak ada tag, maka Docker akan memberikan tag latest.\nReferensi: https://docs.docker.com/engine/reference/commandline/commit/Berikut adalah langkah-langkah untuk membuat image Docker dari container yang telah dijalankan:\nAsumsi kita memiliki container dengan nama my-nginx yang telah dijalankan.\nJalankan container yang ingin diubah menjadi image.\nBuka terminal atau command prompt.\nJalankan perintah berikut untuk membuat image dari container tersebut:\n> docker commit my-nginx my-nginx-image\nTunggu hingga proses selesai.\nSetelah proses selesai, image my-nginx-image akan tersedia di local machine.\n> docker images\nREPOSITORY                       TAG       IMAGE ID       CREATED        SIZE\nmy-nginx-image                   latest    7a2b3b1b0cde   2 minutes ago  78.1MB\nfedora                           latest    eca85b75dc19   11 days ago    222MB\nalpine                           3.20.3    91ef0af61f39   2 weeks ago    7.8MB\nalpine                           latest    91ef0af61f39   2 weeks ago    7.8MB\nubuntu                           latest    edbfe74c41f8   8 weeks ago    78.1MB\nDengan demikian, kita telah berhasil membuat image Docker dari container yang telah dijalankan."}},"/docker":{"title":"Docker","data":{"":"Docker adalah platform open-source yang digunakan untuk membangun, menguji, dan menyebarkan aplikasi dengan cepat dan efisien. Docker menggunakan konsep kontainer, di mana aplikasi dibungkus bersama dengan semua dependensi dan semua library menjadi satu unit yang dapat dijalankan di berbagai lingkungan.","cara-kerja-docker#Cara Kerja Docker":"Docker menggunakan teknologi kontainerisasi untuk memungkinkan pengguna menjalankan aplikasi di lingkungan yang terisolasi. Docker menggunakan image untuk membuat kontainer, di mana image adalah template yang berisi semua dependensi dan library yang diperlukan untuk menjalankan aplikasi. Setiap kontainer Docker berjalan di atas image yang sama, sehingga memastikan bahwa aplikasi berjalan dengan konsisten di berbagai lingkungan.","kelebihan-docker#Kelebihan Docker":"Portabilitas: Container Docker dapat dijalankan di berbagai lingkungan.\nEfisiensi: Container Docker memungkinkan pengguna untuk menjalankan aplikasi dengan cepat dan efisien.\nKonsistensi: Container Docker memastikan bahwa aplikasi berjalan dengan konsisten di berbagai lingkungan.\nIsolasi: Container Docker memastikan bahwa aplikasi berjalan terisolasi dari lingkungan host.","docker-hub#Docker Hub":"Docker Hub adalah cloud-based registry yang menyediakan berbagai image Docker yang dapat digunakan oleh pengguna. Docker Hub menyediakan image Docker yang telah dibuat oleh pengguna lain, sehingga pengguna dapat dengan mudah menggunakan image tersebut tanpa perlu membuat image dari awal."}},"/docker/instalasi":{"title":"Instalasi Docker","data":{"":"Berikut adalah langkah-langkah instalasi Docker di berbagai sistem operasi.","windows#Windows":"Pastikan sebelum melakukan instalasi sudah memiliki akun DockerHub terlebih dahuluJika belum silahkan membuat akun disini: https://hub.docker.com/\nBuka halaman unduh Docker Desktop menggunakan browser.\nDownload installer Docker dengan nama Docker Desktop for Windows - x86_64.\nBuka file yang telah diunduh.\nIkuti langkah-langkah instalasi yang ditampilkan oleh installer Docker.\nSetelah instalasi selesai, buka Docker Desktop dari Start Menu.\nReferensi: https://docs.docker.com/desktop/install/windows-install/","macos#MacOS":"Referensi: https://docs.docker.com/desktop/install/mac-install/","linux#Linux":"Referensi: https://docs.docker.com/desktop/install/linux-install/"}},"/docker/referensi":{"title":"Glosariun Docker","data":{}},"/docker/utility":{"title":"Perintah Utility Docker","data":{"":"Pada halaman ini, akan membahas mengenai perintah-perintah yang sering digunakan pada Docker. Perintah-perintah ini sangat berguna untuk melakukan berbagai operasi pada Docker seperti melakukan copy file dari dan ke container, melihat log container, dan lain sebagainya.","copy-file-dari-dan-ke-container#Copy File dari dan ke Container":"Untuk melakukan copy file dari dan ke container, kita bisa menggunakan perintah docker cp. Berikut adalah contoh perintah untuk melakukan copy file dari dan ke container:\n> docker cp [OPTIONS] SRC_PATH CONTAINER:DEST_PATH\natau melakukan copy file dari container ke host:\n> docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH\nReferensi: https://docs.docker.com/engine/reference/commandline/cp/Berikut adalah contoh langkah-langkah untuk melakukan copy file dari dan ke container:\nCopy file dari host ke container:\n> docker cp file.txt my-ubuntu:/path/to/destination\nCopy file dari container ke host:\n> docker cp my-ubuntu:/path/to/file.txt /path/to/destination","melihat-log-container#Melihat Log Container":"Untuk melihat log container, kita bisa menggunakan perintah docker logs. Berikut adalah contoh perintah untuk melihat log container:\n> docker logs [OPTIONS] CONTAINER\nCONTAINER adalah ID atau nama container yang ingin dilihat log-nya.\nReferensi: https://docs.docker.com/engine/reference/commandline/logs/","melihat-statistik-container#Melihat Statistik Container":"Untuk melihat statistik container, kita bisa menggunakan perintah docker stats.\n> docker stats [OPTIONS] [CONTAINER...]\nReferensi: https://docs.docker.com/engine/reference/commandline/stats/"}},"/":{"title":"Selamat datang di Tutor-Rin","data":{"":"Selamat Datang di Tutor-Rin!Tutor-Rin adalah platform belajar yang fokus pada pengajaran programming. Kami menyediakan tutorial praktis dan mudah dipahami, dirancang untuk membantu Anda, baik sebagai pemula maupun pengembang berpengalaman, menguasai berbagai bahasa pemrograman.Mari mulai perjalanan belajar Anda bersama Tutor-Rin dan kembangkan keterampilan coding Anda hari ini!\nMenambahkan Tutorial Instalasi Apache Nutch\nMenambahkan Tutorial Instalasi Apache Solr"}},"/linux/dasar":{"title":"Perintah Dasar Linux","data":{"":"Linux pada dasarnya adalah sebuah sistem operasi yang berbasis Unix. Oleh karena itu, banyak perintah yang digunakan pada sistem operasi Unix juga bisa digunakan pada sistem operasi Linux.Dengan kata lain, linux adalah sistem operasi yang berbasis teks. Sehingga, untuk melakukan berbagai operasi, kita harus menggunakan perintah-perintah yang tersedia.Berikut adalah beberapa perintah dasar yang sering digunakan pada sistem operasi Linux:","perintah-dasar-navigasi#Perintah Dasar Navigasi":"","1-pwd#1. pwd":"Perintah pwd (print working directory) digunakan untuk menampilkan direktori kerja saat ini.\n> pwd\n/home/username","2-ls#2. ls":"Perintah ls (list) digunakan untuk menampilkan daftar file dan direktori pada direktori kerja saat ini.\n> ls\nDesktop  Documents  Downloads  Music  Pictures  Videos","3-cd#3. cd":"Perintah cd (change directory) digunakan untuk berpindah direktori.Perintah untuk berpindah ke direktori lain:\n> cd [direktori]\nContoh:\n> cd Documents\n> pwd\n/home/username/Documents\nUntuk kembali ke direktori sebelumnya, kita bisa menggunakan perintah cd ...\n> cd ..\n> pwd\n/home/username","4-mkdir#4. mkdir":"Perintah mkdir (make directory) digunakan untuk membuat direktori baru.Perintah untuk membuat direktori:\n> mkdir [nama-direktori]\nContoh:\n> mkdir Projects\n> ls\nDesktop  Documents  Downloads  Music  Pictures  Projects  Videos","5-rm#5. rm":"Perintah rm (remove) digunakan untuk menghapus file atau direktori.Perintah untuk menghapus file:\n> rm [OPTION] [nama-file]\nContoh:\n> rm file.txt\nJika ingin menghapus direktori beserta isinya, kita bisa menggunakan option -r.\n> rm -r Projects","perintah-dasar-berkas#Perintah Dasar Berkas":"","1-touch#1. touch":"Perintah touch digunakan untuk membuat file kosong.Perintah untuk membuat file:\n> touch [nama-file]\nContoh:\n> touch file.txt\n> ls\nDesktop  Documents  Downloads  Music  Pictures  Videos  file.txt","2-cat#2. cat":"Perintah cat (concatenate) digunakan untuk menampilkan isi file.Perintah untuk menampilkan isi file:\n> cat [nama-file]\nContoh:\n> cat file.txt\nHello, World!","3-cp#3. cp":"Perintah cp (copy) digunakan untuk menyalin file atau direktori.Perintah untuk menyalin file:\ncp [OPTION] [source] [destination]\nContoh:\n> cp file.txt file-copy.txt\nJika ingin menyalin direktori beserta isinya, kita bisa menggunakan option -r.\n> cp -r Documents Documents-copy","4-mv#4. mv":"Perintah mv (move) digunakan untuk memindahkan file atau direktori.Perintah untuk memindahkan file:\nmv [OPTION] [source] [destination]\nContoh:\n> mv file.txt Documents\nPerintah untuk memindahkan direktori:\nmv -r [source] [destination]"}},"/linux/desktop-environment":{"title":"Desktop Environment pada Distro Linux","data":{"":"Desktop Environment (DE) adalah antarmuka grafis yang digunakan untuk berinteraksi dengan sistem operasi Linux. Desktop Environment menyediakan berbagai fitur dan aplikasi yang memudahkan pengguna dalam menggunakan sistem operasi Linux. Beberapa Desktop Environment yang populer pada distro Linux adalah GNOME, KDE, Xfce, Cinnamon, dan LXDE.","beberapa-desktop-environment-yang-populer#Beberapa Desktop Environment yang Populer":"Berikut adalah beberapa Desktop Environment yang populer pada distro Linux:","gnome#GNOME":"GNOME (GNU Network Object Model Environment) adalah Desktop Environment yang dikembangkan oleh proyek GNOME. GNOME memiliki tampilan yang bersih dan modern, serta menyediakan berbagai fitur yang memudahkan pengguna dalam menggunakan sistem operasi Linux. GNOME menggunakan GNOME Shell sebagai window manager dan GNOME Files sebagai file manager.","kde#KDE":"KDE (K Desktop Environment) adalah Desktop Environment yang dikembangkan oleh KDE Community. KDE memiliki tampilan yang mirip dengan Windows, serta menyediakan berbagai fitur yang memudahkan pengguna dalam menggunakan sistem operasi Linux. KDE menggunakan KWin sebagai window manager dan Dolphin sebagai file manager.","xfce#Xfce":"Xfce adalah Desktop Environment yang ringan dan cepat, serta cocok untuk pengguna yang memiliki spesifikasi hardware yang rendah. Xfce memiliki tampilan yang sederhana dan mudah digunakan, serta menyediakan berbagai fitur yang memudahkan pengguna dalam menggunakan sistem operasi Linux. Xfce menggunakan Xfwm sebagai window manager dan Thunar sebagai file manager.","cinnamon#Cinnamon":"Cinnamon adalah Desktop Environment yang dikembangkan oleh Linux Mint. Cinnamon memiliki tampilan yang mirip dengan Windows, serta menyediakan berbagai fitur yang memudahkan pengguna dalam menggunakan sistem operasi Linux. Cinnamon menggunakan Muffin sebagai window manager dan Nemo sebagai file manager.","lxde#LXDE":"LXDE (Lightweight X11 Desktop Environment) adalah Desktop Environment yang ringan dan cepat, serta cocok untuk pengguna yang memiliki spesifikasi hardware yang rendah. LXDE memiliki tampilan yang sederhana dan mudah digunakan, serta menyediakan berbagai fitur yang memudahkan pengguna dalam menggunakan sistem operasi Linux. LXDE menggunakan Openbox sebagai window manager dan PCManFM sebagai file manager.","memilih-desktop-environment#Memilih Desktop Environment":"Sebelum memilih Desktop Environment, sebaiknya pertimbangkan terlebih dahulu kebutuhan dan preferensi Anda. Berikut adalah beberapa hal yang perlu dipertimbangkan dalam memilih Desktop Environment:\nTampilan: Pilih Desktop Environment yang memiliki tampilan yang sesuai dengan preferensi Anda.\nFitur: Pilih Desktop Environment yang memiliki fitur yang sesuai dengan kebutuhan Anda.\nKebutuhan Hardware: Pertimbangkan spesifikasi hardware komputer Anda dalam memilih Desktop Environment.\nKemudahan Penggunaan: Pilih Desktop Environment yang mudah digunakan dan sesuai dengan kemampuan Anda.\nKomunitas: Pertimbangkan ukuran dan aktifitas komunitas Desktop Environment yang akan Anda gunakan.\nDukungan: Pertimbangkan dukungan teknis dan pembaruan yang disediakan oleh pengembang Desktop Environment.\nSetelah mempertimbangkan hal-hal di atas, Anda bisa memilih Desktop Environment yang sesuai dengan kebutuhan dan preferensi Anda. Jika Anda masih bingung dalam memilih Desktop Environment, Anda bisa mencoba beberapa Desktop Environment yang populer dan melihat mana yang paling cocok untuk Anda."}},"/linux/distro":{"title":"Distro Linux","data":{"":"Distro Linux (Linux Distribution) adalah sistem operasi Linux yang dikemas dengan berbagai perangkat lunak dan konfigurasi yang siap digunakan. Distro Linux memiliki tujuan yang berbeda-beda, ada yang dikembangkan untuk keperluan server, desktop, cybersecurity, dan lain sebagainya. Distro Linux juga memiliki kebijakan dan filosofi yang berbeda-beda, sehingga pengguna bisa memilih distro Linux yang sesuai dengan kebutuhan dan preferensi mereka.","jenis-jenis-distro-linux#Jenis-jenis Distro Linux":"Ada banyak distro Linux yang bisa digunakan, namun ada beberapa distro yang populer dan sering digunakan, diantaranya adalah:","1-ubuntu#1. Ubuntu":"Ubuntu adalah distro Linux yang paling populer dan paling banyak digunakan. Ubuntu dikembangkan oleh Canonical Ltd. dan dirilis pertama kali pada tahun 2004. Ubuntu memiliki siklus rilis yang teratur, yaitu setiap 6 bulan sekali. Ubuntu memiliki desktop environment yang user friendly dan mudah digunakan, sehingga cocok untuk pemula.","2-debian#2. Debian":"Debian adalah distro Linux yang stabil dan aman. Debian dikembangkan oleh komunitas Debian dan dirilis pertama kali pada tahun 1993. Debian memiliki siklus rilis yang lambat, yaitu setiap 2 tahun sekali. Debian memiliki paket perangkat lunak yang stabil dan aman, sehingga cocok untuk server.","3-fedora#3. Fedora":"Fedora adalah distro Linux yang dikembangkan oleh Fedora Project dan disponsori oleh Red Hat. Fedora dirilis pertama kali pada tahun 2003. Fedora memiliki siklus rilis yang teratur, yaitu setiap 6 bulan sekali. Fedora memiliki paket perangkat lunak yang up-to-date dan cocok untuk pengembangan software.","4-centos#4. CentOS":"CentOS adalah distro Linux yang dikembangkan oleh CentOS Project dan disponsori oleh Red Hat. CentOS merupakan clone dari Red Hat Enterprise Linux (RHEL) yang dikembangkan oleh Red Hat. CentOS dirilis pertama kali pada tahun 2004. CentOS memiliki paket perangkat lunak yang stabil dan aman, sehingga cocok untuk server.","5-arch-linux#5. Arch Linux":"Arch Linux adalah distro Linux yang cocok untuk pengguna yang suka customisasi. Arch Linux dikembangkan oleh komunitas Arch Linux dan dirilis pertama kali pada tahun 2002. Arch Linux memiliki filosofi KISS (Keep It Simple, Stupid) yang mengutamakan kesederhanaan dan kecepatan. Arch Linux memiliki paket perangkat lunak yang up-to-date dan cocok untuk pengguna yang suka eksperimen.","6-kali-linux#6. Kali Linux":"Kali Linux adalah distro Linux yang cocok untuk keperluan keamanan (cybersecurity). Kali Linux dikembangkan oleh Offensive Security dan dirilis pertama kali pada tahun 2013. Kali Linux memiliki paket perangkat lunak yang dikhususkan untuk keperluan keamanan, sehingga cocok untuk ethical hacker dan penetration tester.","memilih-distro-linux#Memilih Distro Linux":"Sebelum memilih distro Linux, sebaiknya pertimbangkan terlebih dahulu kebutuhan dan preferensi Anda. Berikut adalah beberapa hal yang perlu dipertimbangkan dalam memilih distro Linux:\nTujuan: Tentukan tujuan penggunaan distro Linux, apakah untuk server, desktop, cybersecurity, atau pengembangan software.\nKebutuhan: Tentukan kebutuhan perangkat lunak dan konfigurasi yang diperlukan.\nKemampuan: Pertimbangkan kemampuan dan pengalaman Anda dalam menggunakan Linux.\nKomunitas: Pertimbangkan ukuran dan aktifitas komunitas distro Linux yang akan Anda gunakan.\nDukungan: Pertimbangkan dukungan teknis dan pembaruan yang disediakan oleh pengembang distro Linux.\nSetelah mempertimbangkan hal-hal di atas, Anda bisa memilih distro Linux yang sesuai dengan kebutuhan dan preferensi Anda. Jika Anda masih bingung dalam memilih distro Linux, Anda bisa mencoba beberapa distro Linux yang populer dan melihat mana yang paling cocok untuk Anda.","desktop-environment-pada-distro-linux#Desktop Environment pada Distro Linux":"Desktop Environment adalah antarmuka grafis yang digunakan untuk berinteraksi dengan sistem operasi Linux. Desktop Environment menyediakan berbagai fitur dan aplikasi yang memudahkan pengguna dalam menggunakan sistem operasi Linux. Ada banyak Desktop Environment yang bisa digunakan pada distro Linux, diantaranya adalah GNOME, KDE, Xfce, dan LXDE.Pelajari lebih lanjut tentang Desktop Environment di Desktop Environment."}},"/linux":{"title":"Pengenalan Linux","data":{"":"Linux adalah sebuah sistem operasi yang bersifat open source dan gratis. Linux merupakan turunan dari Unix yang dikembangkan oleh Linus Torvalds pada tahun 1991. Linux memiliki banyak distro yang bisa digunakan sesuai dengan kebutuhan pengguna. Beberapa distro yang populer diantaranya adalah Ubuntu, Debian, Fedora, CentOS, dan Arch Linux.","kelebihan-linux#Kelebihan Linux":"Linux memiliki beberapa kelebihan dibandingkan dengan sistem operasi lainnya, diantaranya adalah:\nOpen source: Karena bersifat open source, maka siapapun bisa melihat, mengedit, dan mendistribusikan kode sumber Linux.\nGratis: Linux bisa digunakan tanpa harus membayar lisensi.\nStabil: Linux memiliki stabilitas yang tinggi sehingga jarang sekali mengalami crash.\nAman: Linux memiliki sistem keamanan yang baik sehingga jarang terkena serangan virus.\nCustomizable: Linux bisa disesuaikan dengan kebutuhan pengguna.\nKomunitas yang besar: Linux memiliki komunitas yang besar sehingga mudah mendapatkan bantuan jika mengalami masalah.\nLinux biasanya digunakan untuk keperluan server, namun sekarang juga banyak digunakan sebagai sistem operasi desktop. Linux juga digunakan dalam bidang pengembangan software, big data, dan kecerdasan buatan.","kekurangan-linux#Kekurangan Linux":"Linux memiliki banyak kelebihan dibandingkan dengan sistem operasi lainnya, namun juga memiliki beberapa kekurangan, diantaranya adalah:\nTidak user friendly: Linux memiliki kurva belajar yang tinggi sehingga tidak cocok untuk pemula.\nKompatibilitas: Linux memiliki kompatibilitas yang rendah dengan perangkat keras dan perangkat lunak tertentu.\nTidak banyak game: Linux memiliki pustaka game yang terbatas sehingga tidak cocok untuk gamer.","komponen-linux#Komponen Linux":"Linux memiliki beberapa komponen utama, diantaranya adalah:\nKernel: Merupakan inti dari sistem operasi Linux.\nShell: Merupakan antarmuka yang digunakan untuk berinteraksi dengan sistem operasi.\nFilesystem: Merupakan struktur yang digunakan untuk menyimpan data.\nPackage manager: Merupakan alat yang digunakan untuk mengelola paket perangkat lunak.\nDesktop environment: Merupakan antarmuka grafis yang digunakan untuk berinteraksi dengan sistem operasi.\nPelajari lebih lanjut tentang Package manager di Package Manager.\nPelajari lebih lanjut tentang Desktop environment di Desktop Environment.","distro-linux#Distro Linux":"Linux memiliki banyak distro yang bisa digunakan sesuai dengan kebutuhan pengguna. Beberapa distro yang populer diantaranya adalah:\nUbuntu: Distro yang paling populer dan paling banyak digunakan.\nDebian: Distro yang stabil dan aman.\nFedora: Distro yang cocok untuk pengembangan software.\nCentOS: Distro yang cocok untuk server.\nArch Linux: Distro yang cocok untuk pengguna yang suka customisasi.\nKali Linux: Distro yang cocok untuk keperluan keamanan/cybersecurity.\nPelajari lebih lanjut tentang distro Linux di Distro Linux.Linux memiliki banyak kelebihan dibandingkan dengan sistem operasi lainnya, namun juga memiliki beberapa kekurangan. Oleh karena itu, sebelum menggunakan Linux, sebaiknya pertimbangkan terlebih dahulu kelebihan dan kekurangan dari Linux."}},"/linux/package-manager":{"title":"Package Manager","data":{"":"Package manager adalah alat yang digunakan untuk mengelola paket perangkat lunak pada sistem operasi Linux. Package manager memudahkan pengguna untuk menginstal, menghapus, dan mengupdate paket perangkat lunak. Package manager juga memastikan bahwa paket perangkat lunak yang diinstal memiliki dependensi yang diperlukan.","jenis-jenis-package-manager#Jenis-jenis Package Manager":"Ada beberapa jenis package manager yang digunakan pada sistem operasi Linux, diantaranya adalah:","1-apt-advanced-package-tool#1. APT (Advanced Package Tool)":"APT adalah package manager yang digunakan pada distro Linux berbasis Debian, seperti Ubuntu dan Linux Mint. APT menggunakan file .deb sebagai format paket perangkat lunak.Contoh perintah APT:\napt-get install [PACKAGE]: Menginstal paket perangkat lunak.\napt-get remove [PACKAGE]: Menghapus paket perangkat lunak.\napt-get update: Memperbarui daftar paket perangkat lunak.\napt-get upgrade: Memperbarui paket perangkat lunak yang sudah terinstal.","2-yum-yellowdog-updater-modified#2. YUM (Yellowdog Updater, Modified)":"YUM adalah package manager yang digunakan pada distro Linux berbasis Red Hat, seperti CentOS dan Fedora. YUM menggunakan file .rpm sebagai format paket perangkat lunak.Contoh perintah YUM:\nyum install [PACKAGE]: Menginstal paket perangkat lunak.\nyum remove [PACKAGE]: Menghapus paket perangkat lunak.\nyum update: Memperbarui paket perangkat lunak yang sudah terinstal.","3-dnf-dandified-yum#3. DNF (Dandified YUM)":"DNF adalah package manager yang digunakan pada distro Linux berbasis Red Hat, seperti Fedora. DNF merupakan pengganti dari YUM yang lebih cepat dan efisien. DNF juga menggunakan file .rpm sebagai format paket perangkat lunak.Contoh perintah DNF:\ndnf install [PACKAGE]: Menginstal paket perangkat lunak.\ndnf remove [PACKAGE]: Menghapus paket perangkat lunak.\ndnf update: Memperbarui paket perangkat lunak yang sudah terinstal.\ndnf search [PACKAGE]: Mencari paket perangkat lunak.","4-pacman#4. Pacman":"Pacman adalah package manager yang digunakan pada distro Linux Arch Linux. Pacman menggunakan file .pkg.tar.xz sebagai format paket perangkat lunak.Contoh perintah Pacman:\npacman -S [PACKAGE]: Menginstal paket perangkat lunak.\npacman -R [PACKAGE]: Menghapus paket perangkat lunak.\npacman -Syu: Memperbarui daftar paket perangkat lunak dan paket yang sudah terinstal."}},"/nginx/deploy-static":{"title":"Deploy Web Statis dengan Nginx","data":{"":"Setelah menginstal dan melakukan konfigurasi Nginx, langkah selanjutnya adalah mendeploy web statis. Web statis adalah jenis situs web yang berisi file HTML, CSS, dan JavaScript tanpa adanya database. Web statis biasanya digunakan untuk situs web yang tidak memerlukan interaksi dengan pengguna, seperti situs web perusahaan, portofolio, atau blog pribadi.Berikut adalah langkah-langkah untuk mendeploy web statis dengan Nginx:","1-persiapkan-file-web-statis#1. Persiapkan File Web Statis":"Pertama, siapkan file web statis yang akan di-deploy. File web statis biasanya berupa file HTML, CSS, dan JavaScript. File-file tersebut dapat dibuat menggunakan text editor seperti Visual Studio Code, Sublime Text, atau Notepad.Berikut adalah contoh struktur direktori file web statis:\nweb-statis/\n├── index.html\n├── about.html\n├── contact.html\n├── css/\n│   └── style.css\n└── js/\n    └── script.js\natau kalian bisa menggunakan file web statis berikut: File Web Statis","2-salin-file-web-statis-ke-direktori-nginx#2. Salin File Web Statis ke Direktori Nginx":"Setelah file web statis siap, salin file tersebut ke direktori Nginx. Direktori Nginx biasanya berada di /usr/share/nginx/html/. Salin file web statis ke direktori tersebut dengan perintah berikut:\n> cp -r /path/to/web-statis/* /usr/share/nginx/html/\nPerintah di atas akan menyalin semua file dan direktori dari web-statis ke direktori Nginx.","3-akses-web-statis#3. Akses Web Statis":"Terakhir, buka browser dan akses http://localhost. Jika muncul halaman utama web statis, berarti deploy web statis dengan Nginx berhasil.Dengan langkah-langkah di atas, Anda telah berhasil mendeploy web statis menggunakan Nginx. Selamat mencoba!"}},"/nginx":{"title":"Pengenalan Nginx","data":{"":"Nginx adalah web server yang ringan dan cepat. Nginx juga dapat digunakan sebagai reverse proxy server, load balancer, mail proxy server, dan HTTP cache. Nginx dikembangkan oleh Igor Sysoev pada tahun 2002.Nginx memiliki arsitektur yang berbeda dengan web server lainnya. Nginx menggunakan arsitektur event-driven dan non-blocking yang memungkinkan Nginx dapat menangani banyak koneksi secara bersamaan dengan menggunakan sumber daya yang lebih sedikit.","kelebihan-nginx#Kelebihan Nginx":"Berikut adalah beberapa kelebihan Nginx:\nRingan dan Cepat: Nginx dirancang untuk menangani banyak koneksi secara bersamaan dengan menggunakan sumber daya yang lebih sedikit.\nReverse Proxy: Nginx dapat digunakan sebagai reverse proxy server untuk melayani request dari client ke server backend.\nLoad Balancer: Nginx dapat digunakan sebagai load balancer untuk mendistribusikan beban kerja ke beberapa server backend.\nHTTP Cache: Nginx memiliki fitur caching yang dapat meningkatkan performa aplikasi web.","nginx-vs-apache#Nginx vs Apache":"Nginx dan Apache adalah dua web server yang populer digunakan. Berikut adalah perbandingan antara Nginx dan Apache:\nFitur\tNginx\tApache\tArsitektur\tEvent-driven, non-blocking\tProcess-driven, blocking\tKinerja\tLebih baik dalam menangani banyak koneksi\tKinerja menurun saat menangani banyak koneksi\tKonfigurasi\tLebih sederhana dan mudah dipahami\tLebih kompleks dan fleksibel\tModul\tModul statis, perlu kompilasi ulang\tModul dinamis, dapat diaktifkan/nonaktifkan tanpa kompilasi ulang\tPenggunaan Memori\tLebih efisien\tLebih tinggi\tDukungan HTTP/2\tYa\tYa\tDukungan SSL\tYa\tYa"}},"/nginx/install":{"title":"Instalasi Nginx","data":{"":"Ada beberapa cara untuk menginstal Nginx di sistem operasi Linux. Nginx dapat diinstal menggunakan package manager bawaan dari sistem operasi atau mengunduh binary dari situs resmi Nginx. Selain itu, Nginx juga dapat diinstal menggunakan Docker.","instalasi-nginx-di-ubuntu#Instalasi Nginx di Ubuntu":"Berikut adalah cara menginstal Nginx di Ubuntu:\nBuka terminal.\nJalankan perintah berikut untuk mengupdate package index:\n> sudo apt update\nJalankan perintah berikut untuk menginstal Nginx:\n> sudo apt install nginx\nSetelah proses instalasi selesai, jalankan perintah berikut untuk memulai Nginx:\n> sudo systemctl start nginx\nJalankan perintah berikut untuk mengaktifkan Nginx agar berjalan saat boot:\n> sudo systemctl enable nginx\nTerakhir, buka browser dan akses http://localhost. Jika muncul halaman selamat datang Nginx, berarti instalasi Nginx berhasil.","instalasi-nginx-di-centos#Instalasi Nginx di CentOS":"Berikut adalah cara menginstal Nginx di CentOS:\nBuka terminal.\nJalankan perintah berikut untuk mengupdate package index:\n> sudo yum check-update\nJalankan perintah berikut untuk menginstal Nginx:\n> sudo yum install nginx\nSetelah proses instalasi selesai, jalankan perintah berikut untuk memulai Nginx:\n> sudo systemctl start nginx\nJalankan perintah berikut untuk mengaktifkan Nginx agar berjalan saat boot:\n> sudo systemctl enable nginx\nTerakhir, buka browser dan akses http://localhost. Jika muncul halaman selamat datang Nginx, berarti instalasi Nginx berhasil.","instalasi-nginx-di-docker#Instalasi Nginx di Docker":"Berikut adalah cara menginstal Nginx di Docker:\nBuka terminal.\nJalankan perintah berikut untuk mengunduh image Nginx dari Docker Hub:\n> docker pull nginx\nJalankan perintah berikut untuk menjalankan container Nginx:\n> docker run --name my-nginx -d -p 80:80 nginx\n-d digunakan untuk menjalankan container di background.\n-p 80:80 digunakan untuk meneruskan port 80 dari host ke port 80 container.\nTerakhir, buka browser dan akses http://localhost. Jika muncul halaman selamat datang Nginx, berarti instalasi Nginx di Docker berhasil.\nSetelah melakukan instalasi Nginx, selanjutnya adalah konfigurasi Nginx agar dapat digunakan sebagai web server."}},"/nginx/konfigurasi":{"title":"Konfigurasi Nginx","data":{"":"Setelah menginstal Nginx, langkah selanjutnya adalah melakukan konfigurasi. Konfigurasi Nginx terdiri dari dua bagian, yaitu konfigurasi global dan konfigurasi spesifik untuk setiap situs web.","konfigurasi-global#Konfigurasi Global":"Konfigurasi global Nginx terletak di file nginx.conf. File ini berisi konfigurasi yang berlaku untuk seluruh situs web yang di-handle oleh Nginx. Berikut adalah beberapa konfigurasi global yang sering digunakan:Letak dari file nginx.conf biasanya berada di  /etc/nginx/nginx.conf  atau  /usr/local/nginx/conf/nginx.conf.","konfigurasi-spesifik-situs-web#Konfigurasi Spesifik Situs Web":"Konfigurasi spesifik situs web terletak di direktori /etc/nginx/conf.d/ atau /etc/nginx/sites-available/. Setiap situs web memiliki file konfigurasi tersendiri. Berikut adalah contoh konfigurasi spesifik situs web:\nserver {\n    listen 80;\n    server_name example.com;\n    root /var/www/html;\n    index index.html;\n}\nKonfigurasi di atas mendefinisikan situs web yang akan di-handle oleh Nginx. Konfigurasi tersebut berarti Nginx akan menangani situs web example.com yang berada di direktori /var/www/html dan file index-nya adalah index.html. Hal tersebut berarti jika kita mengakses http://example.com, maka Nginx akan menampilkan halaman yang ada di direktori /var/www/html.","menjalankan-nginx#Menjalankan Nginx":"Setelah melakukan konfigurasi, jalankan perintah berikut untuk me-restart Nginx:\n> sudo systemctl restart nginx\nPerintah di atas akan me-restart Nginx agar konfigurasi yang baru saja diubah dapat diterapkan.Untuk mengecek apakah konfigurasi sudah berjalan dengan baik, buka browser dan akses situs web yang telah dikonfigurasi. Jika halaman web muncul,\nberarti konfigurasi Nginx sudah berjalan dengan baik.Jika didapatkan hasil seperti di bawah ini, berarti konfigurasi Nginx sudah berhasil:","menjalankan-nginx-ketika-boot#Menjalankan Nginx ketika Boot":"Agar Nginx berjalan saat boot, jalankan perintah berikut:\n> sudo systemctl enable nginx\nPerintah di atas akan mengaktifkan Nginx agar berjalan saat boot. Dengan begitu, Nginx akan otomatis berjalan saat server dihidupkan."}},"/search-engine/config-container":{"title":"Konfigurasi Container Docker","data":{"":"Pada tutorial ini, kita akan membangun Search Engine dengan menggunakan Apache Nutch dan Apache Solr pada Docker. Namun sebelum kita membangun Search Engine, kita perlu melakukan konfigurasi container Docker terlebih dahulu."}},"/search-engine":{"title":"Membangun Search Engine dengan Apache Nutch dan Apache Solr pada Docker","data":{"search-engine#Search Engine":"Search Engine adalah sebuah sistem yang digunakan untuk melakukan pencarian teks pada data yang disimpan dalam berbagai format, seperti XML, JSON, dan CSV. Search Engine juga dapat digunakan untuk melakukan indexing pada data yang disimpan dalam berbagai format.","cara-kerja-search-engine#Cara Kerja Search Engine":"Search Engine bekerja dengan cara melakukan crawling pada data yang disimpan dalam berbagai format, seperti XML, JSON, dan CSV. Search Engine juga melakukan indexing pada data yang disimpan dalam berbagai format. Setelah melakukan crawling dan indexing, Search Engine akan menyimpan data yang telah di-crawling dan di-indexing dalam sebuah database. Search Engine juga menyediakan antarmuka yang digunakan untuk melakukan pencarian teks pada data yang disimpan dalam database.","apa-itu-apache-nutch-dan-apache-solr#Apa itu Apache Nutch dan Apache Solr?":"","apache-nutch#Apache Nutch":"Apache Nutch adalah sebuah proyek open-source yang dikembangkan oleh Apache Software Foundation. Nutch adalah sebuah web crawler yang digunakan untuk mengumpulkan data dari web. Nutch dapat digunakan untuk mengumpulkan data dari berbagai sumber, seperti halaman web, file, dan database. Nutch juga dapat digunakan untuk melakukan crawling pada web secara terjadwal.Website: https://nutch.apache.org/","apache-solr#Apache Solr":"Apache Solr adalah sebuah proyek open-source yang dikembangkan oleh Apache Software Foundation. Solr adalah sebuah platform pencarian yang digunakan untuk melakukan pencarian teks pada data yang disimpan dalam berbagai format, seperti XML, JSON, dan CSV. Solr juga dapat digunakan untuk melakukan indexing pada data yang disimpan dalam berbagai format.Website: https://lucene.apache.org/solr/","membangun-search-engine-dengan-apache-nutch-dan-apache-solr-pada-docker#Membangun Search Engine dengan Apache Nutch dan Apache Solr pada Docker":"Pada tutorial ini, kita akan membangun Search Engine dengan menggunakan Apache Nutch dan Apache Solr pada Docker. Berikut adalah langkah-langkah yang akan kita lakukan:\nInstalasi Docker\nInstalasi Apache Nutch\nInstalasi Apache Solr\nKonfigurasi Apache Nutch\nKonfigurasi Apache Solr\nMelakukan Crawling Data\nMelakukan Indexing Data\nMelakukan Pencarian Data"}},"/search-engine/nutch":{"title":"Nutch","data":{"instalasi-apache-nutch#Instalasi Apache Nutch":""}}}